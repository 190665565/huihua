package com.partner.huihua.utils.common;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Random;

/**
 * 字符串处理的常用方法
 * @author rainyhao
 * @since 2015-3-15 下午4:40:40
 */
public final class XString {
	
	private static final char[] CHARS = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
										'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
										'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
										'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
										'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
	
	private static final char[] PHONES = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
	/**
	 * 判断一个字符串是否为null或者trim之后是否为空字符串
	 * @param src 要检查的字符串
	 * @return
	 */
	public static final boolean isNullOrEmpty(String src) {
		return null == src || "".equals(src.trim());
	}
	
	/**
	 * 将指定的值的数组用空连接成字符串
	 * 数组元素中的空值会被替换成空字符串
	 * @param args 要连接的值
	 * @return
	 */
	public static final String join(Object... args) {
		String result = "";
		for (int i = 0; i < args.length; i++) {
			result += null == args[i] ? "" : args[i];
		}
		return result;
	}
	
	/**
	 * 使用utf-8对字符串进行url转码
	 * @author rainyhao 
	 * @since 2015-3-17 上午11:58:16
	 * @param value 字符串
	 * @return
	 */
	public static final String encode(String value) {
		return encode(value, "UTF-8");
	}
	
	/**
	 * 使用指定的字符集对字符串进行url转码
	 * @author rainyhao 
	 * @since 2015-3-17 上午11:58:19
	 * @param value 字符串
	 * @param charset 字符集
	 * @return
	 */
	public static final String encode(String value, String charset) {
		String ret = "";
		if (null == value) {
			return ret;
		}
		try {
			ret = URLEncoder.encode(value, charset);
		} catch (UnsupportedEncodingException ignore) {
			ret = "转码错误, 未知字符编码: " + charset;
		}
		return ret;
	}
	
	/**
	 * 使用utf-8对做过url转码的字符串进行还原
	 * @author rainyhao 
	 * @since 2015-3-17 下午12:03:05
	 * @param value 转码过的字符串
	 * @return
	 */
	public static final String decode(String value) {
		return decode(value, "UTF-8");
	}
	
	/**
	 * 使用指定的字符集对做过url转码的字符串进行还原
	 * @author rainyhao 
	 * @since 2015-3-17 下午12:03:50
	 * @param value 转码过的字符串
	 * @param charset 字符集
	 * @return
	 */
	public static final String decode(String value, String charset) {
		String ret = "";
		if (null == value) {
			return ret;
		}
		try {
			ret = URLDecoder.decode(value, charset);
		} catch (UnsupportedEncodingException ignore) {
			ret = "解码错误, 未知字符编码: " + charset;
		}
		return ret;
	}
	
	/**
	 * 从0-9,a-z,A-Z里随机生成8位长度的字符串
	 * @author rainyhao 
	 * @since 2015-3-18 下午5:33:48
	 * @return
	 */
	public static final String random() {
		return random(8);
	}
	
	/**
	 * 从0-9,a-z,A-Z里随机生成指定长度的字符串
	 * @author rainyhao 
	 * @since 2015-3-18 下午5:36:29
	 * @param length 字符串长度
	 * @return
	 */
	public static final String random(int length) {
		char[] c = new char[length];
		Random random = new Random();
		for (int i = 0; i < c.length; i++) {
			int index = random.nextInt(CHARS.length);
			c[i] = CHARS[index];
		}
		return new String(c);
	}
	
	/**
	 * 从0-9里随机生成指定长度的数字字符串
	 * @since 2015-3-18 下午5:36:29
	 * @param length 字符串长度
	 * @return
	 */
	public static final Long randomDefaultPhoneNum(int length) {
		char[] c = new char[length];
		Random random = new Random();
		for (int i = 0; i < c.length; i++) {
			int index = random.nextInt(PHONES.length);
			c[i] = PHONES[index];
		}
		return Long.parseLong(new String(c));
	}
	public static void main(String[] args) {
//		System.out.println(random());
		System.out.println(randomDefaultPhoneNum(10));
	}
}
